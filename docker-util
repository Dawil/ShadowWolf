#!/bin/bash

read -r -d '' USAGE <<HERE
Usage: $0 <command> <target> [args]
Try '$0 help' for more info.
HERE
read -r -d '' HELP <<HERE
Usage: $0 <command> <target>

Commands:
  install (No targets) Ensures you have the ShadowWolf-dev docker image.
  dev     Development commands like \`rails s\` and \`grunt server\`.
  build   Build docker images.
  run     (No targets) Runs whatever commands are passed to it in the
          container.
  help    Print this text.

Targets:
  client  Angular frontend. Also starts the server.
  test    Runs protractor tests in phantomjs container.
  server  Rails backend. Also starts mongo.
  mongo   (Dev only) Mongodb service.
  console Rails console. Assumes mongo.

Run '$0 dev client' to get a full working environment.
HERE

SHARED_VOLUME=`pwd`:/ShadowWolf/
BASE_ARGS="-t -v $SHARED_VOLUME "
DEFAULT_ARGS="-d $BASE_ARGS "
case "$1" in
  install)
    rm Dockerfile
    ln -s development.docker Dockerfile
    sudo docker build -t ShadowWolf-dev .
    rm Dockerfile
    ln -s development-server.docker Dockerfile
    sudo docker build -t ShadowWolf-dev-server .
    rm Dockerfile
    ln -s mongo.docker Dockerfile
    sudo docker build -t ShadowWolf-mongo .
    rm Dockerfile
    ln -s development-testing.docker Dockerfile
    sudo docker build -t ShadowWolf-dev-testing .
    ;;
  dev)
    case "$2" in
      test)
        [[ -z `sudo docker ps | grep -e "sw-client[^/]"` ]] && $0 dev client
        [[ -z `sudo docker ps | grep -e "sw-webdriver[^/]"` ]] && $0 dev webdriver

        sudo docker kill sw-testing && sudo docker rm sw-testing
        sudo docker run --name sw-testing -i $BASE_ARGS --link sw-webdriver:webdriver --link sw-client:client -w /ShadowWolf/client/ ShadowWolf-dev-testing grunt test
        ;;
      webdriver)
        sudo docker kill sw-webdriver && sudo docker rm sw-webdriver
        sudo docker run --name sw-webdriver $DEFAULT_ARGS -p 4444 -w /ShadowWolf/client/ ShadowWolf-dev-testing webdriver-manager start
        ;;
      client)
        # 9000 for grunt server and 35729 for live-reload
        [[ -z `sudo docker ps | grep -e "sw-server[^/]"` ]] && $0 dev server
        sudo docker kill sw-client && sudo docker rm sw-client
        sudo docker run --name sw-client --link sw-server:server $DEFAULT_ARGS -p 9000:9000 -p 35729:35729 -w /ShadowWolf/client/ ShadowWolf-dev grunt server
        ;;
      server)
        # rails uses 3000
        [[ -z `sudo docker ps | grep -e "sw-mongo[^/]"` ]] && $0 dev mongo
        sudo docker kill sw-server && sudo docker rm sw-server
        sudo docker run -d -p 3000 --name sw-server --link sw-mongo:mongo $DEFAULT_ARGS -w /ShadowWolf/server/ ShadowWolf-dev-server rails server
        ;;
      console)
        sudo docker run -i -t -v $SHARED_VOLUME --link sw-mongo:mongo -w /ShadowWolf/server/ ShadowWolf-dev rails console
        ;;
      mongo)
        sudo docker kill sw-mongo && sudo docker rm sw-mongo
        sudo docker run -d -p 27017 --name sw-mongo $DEFAULT_ARGS ShadowWolf-mongo mongod
        ;;
      *)
        echo "$USAGE"
        ;;
    esac
    ;;
  build)
    CONTAINER_NAME="ShadowWolf-deploy"
    case "$2" in
      client)
        rm Dockerfile
        ln -s production-client.docker Dockerfile
        CONTAINER_NAME="$CONTAINER_NAME"-client
        ;;
      server)
        rm Dockerfile
        ln -s production-server.docker Dockerfile
        CONTAINER_NAME="$CONTAINER_NAME"-server
        ;;
      *)
        echo "$USAGE"
        exit 1
        ;;
    esac
    sudo docker build -t $CONTAINER_NAME .
    ;;
  run)
    shift
    COMMAND="bash"
    [[ -n "$*" ]] && COMMAND="$*"
    sudo docker run -i -t -v $SHARED_VOLUME ShadowWolf-dev $COMMAND
    ;;
  help)
    echo "$HELP"
    ;;
  *)
    echo "$USAGE"
    ;;
esac
